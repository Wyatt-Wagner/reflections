What happens when you initialize a repository? Why do you need to do it?
When you initialize a new repository, it creates a new one from scratch unlike cloning one that already has commits in it. You need to do if if you want to start something new.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
The staging area is where you can make commits without making them permanently.
This helps because I can decide when to make a logical commit.

How can you use the staging area to make sure you have one commit per logical
change?
You can use the git diff command between the staging area
and the working directory to make sure that you have a logical amount of changes before making the commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
They would help when I want to keep different versions of the same thing at once like a multi-difficulty game.

How do the diagrams help you visualize the branch structure?
They helped me understand how the branches are more separate than I initially thought.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
When we merge two branches, we combine the two commit histories together,
so that the new master branch has all of the additions of the other branch.
It's represented in the diagram that way so we understand that the two branches
have separate commits.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
automatically merging files may be less of a hassle, but they don't account for merging conflicts.
